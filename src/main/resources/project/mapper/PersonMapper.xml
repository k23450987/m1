<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="project.mapper.PersonMapper">
	<resultMap type="project.domain.Person" id="PersonRM">
		<id property="person_id" column="PERSON_ID" />
		<result property="p_name" column="P_NAME" />
		<result property="age" column="AGE" />
		<result property="info" column="INFO" />
		<result property="dept_id" column="DEPT_ID" />
		<result property="job_id" column="JOB_ID" />
		<result property="job_name" column="JOB_NAME" />
		<result property="dept_name" column="DEPT_NAME" />
	</resultMap>
	<select id="selectAll" resultMap="PersonRM">
	SELECT 
	  a.person_id,
	  a.p_name,
	  a.age,
	  a.info,
	  a.dept_id,
	  a.job_id,
	  a.job_name,
	  b.dept_name 
	FROM
	  (SELECT 
	    p.`person_id`,
	    p.`p_name`,
	    p.`age`,
	    p.`info`,
	    p.`dept_id`,
	    p.`job_id`,
	    j.`job_name` 
	  FROM
	    person p 
	    LEFT JOIN job j 
	      ON p.`job_id` = j.`job_id`) a 
	  LEFT JOIN 
	    (SELECT 
	      p.person_id,
	      d.`dept_id`,
	      d.`dept_name` 
	    FROM
	      person p 
	      LEFT JOIN dept d 
	        ON p.`dept_id` = d.`dept_id`) b 
	    ON a.person_id = b.person_id 
	</select>
	<select id="selectOne" parameterType="int" resultMap="PersonRM">
	SELECT 
	  a.person_id,
	  a.p_name,
	  a.age,
	  a.info,
	  a.dept_id,
	  a.job_id,
	  a.job_name,
	  b.dept_name 
	FROM
	  (SELECT 
	    p.`person_id`,
	    p.`p_name`,
	    p.`age`,
	    p.`info`,
	    p.`dept_id`,
	    p.`job_id`,
	    j.`job_name` 
	  FROM
	    person p 
	    LEFT JOIN job j 
	      ON p.`job_id` = j.`job_id`) a 
	  LEFT JOIN 
	    (SELECT 
	      p.person_id,
	      d.`dept_id`,
	      d.`dept_name` 
	    FROM
	      person p 
	      LEFT JOIN dept d 
	        ON p.`dept_id` = d.`dept_id`) b 
	    ON a.person_id = b.person_id 
	WHERE a.person_id = #{person_id} 
	</select>
	<select id="selectPersonByName" parameterType="string" resultMap="PersonRM">
	SELECT 
	  a.person_id,
	  a.p_name,
	  a.age,
	  a.info,
	  a.dept_id,
	  a.job_id,
	  a.job_name,
	  b.dept_name 
	FROM
	  (SELECT 
	    p.`person_id`,
	    p.`p_name`,
	    p.`age`,
	    p.`info`,
	    p.`dept_id`,
	    p.`job_id`,
	    j.`job_name` 
	  FROM
	    person p 
	    LEFT JOIN job j 
	      ON p.`job_id` = j.`job_id`) a 
	  LEFT JOIN 
	    (SELECT 
	      p.person_id,
	      d.`dept_id`,
	      d.`dept_name` 
	    FROM
	      person p 
	      LEFT JOIN dept d 
	        ON p.`dept_id` = d.`dept_id`) b 
	    ON a.person_id = b.person_id 
	WHERE a.p_name LIKE #{p_name} 
	</select>
	<select id="selectPersonById" parameterType="int" resultMap="PersonRM">
	SELECT 
	  a.person_id,
	  a.p_name,
	  a.age,
	  a.info,
	  a.dept_id,
	  a.job_id,
	  a.job_name,
	  b.dept_name 
	FROM
	  (SELECT 
	    p.`person_id`,
	    p.`p_name`,
	    p.`age`,
	    p.`info`,
	    p.`dept_id`,
	    p.`job_id`,
	    j.`job_name` 
	  FROM
	    person p 
	    LEFT JOIN job j 
	      ON p.`job_id` = j.`job_id`) a 
	  LEFT JOIN 
	    (SELECT 
	      p.person_id,
	      d.`dept_id`,
	      d.`dept_name` 
	    FROM
	      person p 
	      LEFT JOIN dept d 
	        ON p.`dept_id` = d.`dept_id`) b 
	    ON a.person_id = b.person_id 
	WHERE a.job_id = #{job_id}
	</select>
	<delete id="delete" parameterType="int">
		delete from person
		where
		PERSON_ID = #{person_id}
	</delete>
	<insert id="insert" parameterType="project.domain.Person">
	INSERT INTO person (p_name, age, info, dept_id, job_id) 
	VALUES
	  (#{p_name}, #{age}, #{info}, #{dept_id}, #{job_id})
	</insert>
	<update id="updateInfo" parameterType="project.domain.Person">
	UPDATE 
	  person 
	<set>
	  <if test="p_name!=null">p_name = #{p_name},</if>
	  <if test="age!=null">age = #{age},</if>
	  <if test="info!=null">info = #{info},</if>
	  <if test="dept_id!=null">dept_id = #{dept_id},</if>
	  <if test="job_id!=null">job_id = #{job_id},</if>
	</set>
	WHERE person_id = #{person_id} 
	</update>
	<update id="updateJobInfo" parameterType="project.domain.Person">
	UPDATE 
	  person 
	<set>
	  <if test="dept_id!=null">dept_id = #{dept_id},</if>
	  <if test="job_id!=null">job_id = #{job_id},</if>
	</set>
	WHERE person_id = #{person_id} 
	</update>
	<!-- <insert id="insert" parameterType="project.domain.Person">
		INSERT INTO PERSON
		(PERSON_ID,NAME,AGE,INFO,DEPT_ID,JOB_ID)
		VALUES
		(#{id},#{name},#{age},#{info},#{dept_id},#{job_id})
	</insert>
	<update id="update" parameterType="project.domain.Person">
		update person
		set
		<if test="name!=null">NAME = #{name},</if>
		<if test="age!=null">AGE = #{age},</if>
		<if test="info!=null">INFO = #{remark},</if>
		<if test="dept_id!=null">DEPT_ID = #{dept_id},</if>
		<if test="job_id!=null">JOB_ID = #{job_id},</if>
		where
		PERSON_ID=#{id}
	</update>
	<delete id="delete" parameterType="int">
		delete from person
		where
		PERSON_ID = #{id}
	</delete>
	<select id="select" parameterType="map" resultMap="PersonRM">
		select NAME,AGE,INFO from person
		<where>
		<if test="name!=null">and NAME like #{name}</if>
		<if test="dept_id!=null">and age>=#{ageStart}</if>
		<if test="ageEnd!=null"><![CDATA[and age <=]]> #{ageEnd}</if>
		</where>
	</select> -->
</mapper>